---
// Carousel component for reviews
const reviews = [
  {
    text: "Calidad constante y entregas puntuales. Excelente servicio logístico.",
    author: "Carla Méndez",
    location: "México",
    avatar: "CM"
  },
  {
    text: "Confiables, rápidos y siempre atentos a cada detalle.",
    author: "Luis Gómez", 
    location: "España",
    avatar: "LG"
  },
  {
    text: "Gran aliado para importar materias primas sin complicaciones.",
    author: "Priya Desai",
    location: "India", 
    avatar: "PD"
  },
  {
    text: "Servicio personalizado y eficiente. Superaron nuestras expectativas.",
    author: "Federico Álvarez",
    location: "Argentina",
    avatar: "FA"
  }
];
---

<div class="relative">
  <!-- Carousel Container -->
  <div id="reviews-carousel" class="overflow-hidden rounded-3xl">
    <div id="carousel-track" class="flex transition-transform duration-500 ease-in-out">
      {reviews.map((review, index) => (
        <div class="w-full flex-shrink-0 px-4">
          <div class="bg-white/90 backdrop-blur-sm rounded-2xl p-8 shadow-xl border border-white/20 mx-auto max-w-2xl">
            <!-- Quote Icon -->
            <div class="flex justify-center mb-6">
              <div class="w-12 h-10 bg-gradient-to-br from-carrot-orange to-manhattan rounded-full flex items-center justify-center">
                <svg class="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M14.017 21v-7.391c0-5.704 3.731-9.57 8.983-10.609l.995 2.151c-2.432.917-3.995 3.638-3.995 5.849h4v10h-9.983zm-14.017 0v-7.391c0-5.704 3.748-9.57 9-10.609l.996 2.151c-2.433.917-3.996 3.638-3.996 5.849h4v10h-10z"/>
                </svg>
              </div>
            </div>
            
            <!-- Review Text -->
            <blockquote class="text-center mb-8">
              <p class="font-gotham text-xl text-gray-700 leading-relaxed italic">
                "{review.text}"
              </p>
            </blockquote>
            
            <!-- Author Info -->
            <div class="flex items-center justify-center space-x-4">
              <div class="w-14 h-14 bg-gradient-to-br from-eastern-blue to-spray rounded-full flex items-center justify-center shadow-lg">
                <span class="font-gotham-bold text-white text-lg">{review.avatar}</span>
              </div>
              <div class="text-center">
                <div class="font-gotham-bold text-lg text-gray-900">{review.author}</div>
                <div class="font-gotham text-sm text-gray-600">{review.location}</div>
              </div>
            </div>
            
            <!-- Stars -->
            <div class="flex justify-center mt-6 space-x-1">
              {[...Array(5)].map(() => (
                <svg class="w-5 h-5 text-carrot-orange" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
                </svg>
              ))}
            </div>
          </div>
        </div>
      ))}
    </div>
  </div>
  

  
  <!-- Dots Indicator -->
  <div class="flex justify-center mt-4 space-x-2">
    {reviews.map((_, index) => (
      <button 
        class="carousel-dot w-3 h-3 rounded-full transition-all duration-300"
        data-index={index}
      ></button>
    ))}
  </div>
</div>

<script>
  interface CarouselElements {
    track: HTMLElement | null;
    dots: NodeListOf<Element>;
  }

  class ReviewsCarousel {
    private currentIndex: number = 0;
    private totalSlides: number = 4;
    private track: HTMLElement | null;
    private dots: NodeListOf<Element>;
    private autoPlayInterval: number | null = null;
    
    constructor() {
      this.track = document.querySelector('#carousel-track');
      this.dots = document.querySelectorAll('.carousel-dot');
      this.init();
    }
    
    private init(): void {
      // Add click listeners to dots
      this.dots.forEach((dot: Element, index: number) => {
        dot.addEventListener('click', () => this.goToSlide(index));
      });
      
      // Start autoplay
      this.startAutoPlay();
      
      // Pause autoplay on hover
      const carousel = document.querySelector('#reviews-carousel');
      carousel?.addEventListener('mouseenter', () => this.stopAutoPlay());
      carousel?.addEventListener('mouseleave', () => this.startAutoPlay());
    }
    
    private nextSlide(): void {
      this.currentIndex = this.currentIndex === this.totalSlides - 1 ? 0 : this.currentIndex + 1;
      this.updateCarousel();
    }
    
    private goToSlide(index: number): void {
      this.currentIndex = index;
      this.updateCarousel();
    }
    
    private updateCarousel(): void {
      if (this.track) {
        this.track.style.transform = `translateX(-${this.currentIndex * 100}%)`;
      }
      
      // Update dots
      this.dots.forEach((dot: Element, index: number) => {
        dot.classList.toggle('active', index === this.currentIndex);
      });
    }
    
    private startAutoPlay(): void {
      this.stopAutoPlay();
      this.autoPlayInterval = window.setInterval(() => {
        this.nextSlide();
      }, 5000);
    }
    
    private stopAutoPlay(): void {
      if (this.autoPlayInterval) {
        clearInterval(this.autoPlayInterval);
        this.autoPlayInterval = null;
      }
    }
  }
  
  // Initialize carousel when DOM is loaded
  document.addEventListener('DOMContentLoaded', () => {
    new ReviewsCarousel();
  });
</script>

<style>
  .carousel-dot {
    background-color: rgba(255, 255, 255, 0.8);
    border: 2px solid rgba(241, 139, 33, 0.3);
    cursor: pointer;
    transition: all 0.3s ease;
  }
  
  .carousel-dot.active {
    background-color: #F18B21;
    border-color: #F18B21;
    transform: scale(1.2);
  }
  
  .carousel-dot:hover {
    background-color: rgba(255, 255, 255, 0.9);
    border-color: rgba(241, 139, 33, 0.6);
    transform: scale(1.1);
  }
  
  .carousel-dot.active:hover {
    background-color: #E1A673;
    border-color: #E1A673;
  }
</style>
